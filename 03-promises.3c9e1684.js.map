{"mappings":"oeA6BA,IAAAA,EAAAC,EAAA,SACAD,EAAAE,OAAOC,KAAK,CAAEC,kBAAmB,WAAYC,qBAAsB,WA2BnE,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,EAnCA,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOH,EAAEI,OAAOC,SAASjB,MAAMkB,OAC3C,MAAMC,EAAOJ,OAAOH,EAAEI,OAAOC,SAASE,KAAKD,OACrCE,EAASL,OAAOH,EAAEI,OAAOC,SAASG,OAAOF,OAE/C,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCvB,EAAcuB,EAAGP,GACdQ,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBR,EAAAE,OAAO6B,QAAQ,uBAAqBxB,QAAiBC,MAAU,IAEhEwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBR,EAAAE,OAAO+B,QAAQ,sBAAoB1B,QAAeC,MAAU,IAEhEc,GAASK,C","sources":["src/js/03-promises.js"],"sourcesContent":["// В HTML есть разметка формы, в поля которой пользователь будет вводить первую задержку в миллисекундах, шаг увеличения задержки для каждого промиса после первого и количество промисов которое необходимо создать.\n\n//   Напиши скрипт, который при сабмите формы вызывает функцию createPromise(position, delay) столько раз, сколько ввели в поле amount.При каждом вызове передай ей номер создаваемого промиса(position) и задержку учитывая введенную пользователем первую задержку(delay) и шаг(step).\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n// Дополни код функции createPromise так, чтобы она возвращала один промис, который выполянется или отклоняется через delay времени.Значением промиса должен быть объект, в котором будут свойства position и delay со значениями одноименных параметров.Используй начальный код функции для выбора того, что нужно сделать с промисом - выполнить или отклонить.\n\n//   createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n// Библиотека уведомлений\n// ВНИМАНИЕ\n// Этот функционал не обязателен при сдаче задания, но будет хорошей дополнительной практикой.\n\n// Для отображения уведомлений пользователю вместо console.log() используй библиотеку notiflix.\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nNotify.init({ cssAnimationStyle: 'from-top', fontAwesomeIconStyle: 'shadow' });\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  let delay = Number(e.target.elements.delay.value);\n  const step = Number(e.target.elements.step.value);\n  const amount = Number(e.target.elements.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n"],"names":["$iQIUW","parcelRequire","Notify","init","cssAnimationStyle","fontAwesomeIconStyle","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","addEventListener","e","preventDefault","delay1","Number","target","elements","value","step","amount","i","then","success","catch","failure"],"version":3,"file":"03-promises.3c9e1684.js.map"}